/* eslint-disable react-hooks/exhaustive-deps */
import 'bulma/css/bulma.css'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import Web3 from 'web3'
import contracts from '../blockchain/build/vending'
import styles from '../styles/VendingMachine.module.css'

const VendingMachine = () => {
  const [error, setError] = useState('')
  const [successMsg, setSuccessMsg] = useState('')
  const [inventory, setInventory] = useState(0)
  const [myDonuts, setMyDonuts] = useState('0.0')
  const [buyCount, setBuyCount] = useState(0)
  const [web3, setWeb3] = useState(null)
  const [currentAccount, setCurrentAccount] = useState(null)
  const [vmContract, setVmContract] = useState(null)

  const { vendingMachineContract } = contracts

  const cl = m => console.log(m)

  const getInventoryHandler = async () => {
    const _inventory = await vmContract.methods
      .getVendingMachineBalance()
      .call()
    setInventory(_inventory)
  }

  const getMyDonutCount = async () => {
    const count = await vmContract.methods.donutBalances(currentAccount).call()
    setMyDonuts(count)
  }

  const buyDonutHandler = async () => {
    setSuccessMsg('')
    setError('')
    try {
      await vmContract.methods.purchase(buyCount).send({
        from: currentAccount,
        value: web3.utils.toWei('2', 'ether') * buyCount
      })
      setSuccessMsg('here we are!!!')
    } catch (error) {
      setError(error.message)
    }
  }

  const onChange = e => setBuyCount(e.target.value)

  useEffect(() => {
    if (vmContract && currentAccount) {
      getInventoryHandler()
      getMyDonutCount()
    }
  }, [vmContract, currentAccount])

  const connectWalletHandler = async () => {
    if (typeof window !== 'undefined' && typeof window.celo !== 'undefined') {
      try {
        setError('')
        await window.celo.request({ method: 'eth_requestAccounts' })
        // ethereum
        const _web3 = new Web3(window.celo)
        setWeb3(_web3)
        const accounts = await _web3.eth.getAccounts()
        setCurrentAccount(accounts[0])

        const vm = vendingMachineContract(_web3)
        setVmContract(vm)
      } catch (error) {
        setError(error.message)
      }
    } else {
      cl('Please Install MetaMask')
    }
  }

  return (
    <div className={styles.main}>
      <Head>
        <title>Vending Machine App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <nav className='navbar mt-4 mb-4'>
        <div className='container'>
          <div className='navbar-brand'>
            <h1>Vending Machine</h1>
          </div>
          <div className='navbar-end'>
            <button
              onClick={connectWalletHandler}
              className='button is-primary'
            >
              connect wallet
            </button>
          </div>
        </div>
      </nav>
      <section>
        <div className='container'>
          <h1>Vending Machine Inventory: {inventory}</h1>
        </div>
      </section>
      <section>
        <div className='container'>
          <h1>My Donuts: {myDonuts}</h1>
        </div>
      </section>
      <section className='mt-5'>
        <div className='container'>
          <div className='field'>
            <label className='label'>Buy Donuts </label>
            <div className='control'>
              <input
                onChange={onChange}
                className='input'
                type='number'
                placeholder='Enter Amount...'
              />
              <button
                onClick={buyDonutHandler}
                disabled={!vmContract}
                className='button is-primary mt-3'
              >
                Buy
              </button>
            </div>
          </div>
        </div>
      </section>
      <section>
        <div className='container has-text-danger'>
          <p>{error}</p>
        </div>
      </section>
      <section>
        <div className='container has-text-success'>
          <p>{successMsg}</p>
        </div>
      </section>
    </div>
  )
}

export default VendingMachine
